{"version":3,"sources":["services/history.js","actions/index.js","pages/_layouts/default/index.js","features/BlogSearchForm.js","features/BlogHeader.js","pages/_layouts/auth/index.js","routes/Route.js","features/BlogTag.js","features/BlogReply.js","features/BlogComment.js","features/BlogItem.js","features/BlogList.js","pages/DashBoard.js","pages/BlogCreate.js","pages/SignIn.js","pages/BlogDetail.js","pages/BlogSearchResult.js","routes/index.js","App.js","reducers/index.js","store/configureStore.js","sagas/index.js","serviceWorker.js","index.js"],"names":["history","createBrowserHistory","getPosts","state","postData","items","getUsers","userData","getComments","commentData","getSignInAccount","accountData","loggedID","queryAccount","query","DefaultLayout","children","Container","BlogSearchForm","useState","formAction","setFormAction","searchEl","useRef","to","current","value","Form","onSubmit","event","preventDefault","trim","length","InputGroup","FormControl","placeholder","aria-label","aria-describedby","size","ref","onChange","Append","Button","type","variant","onClick","connect","userName","name","props","dispatch","Row","className","Col","Image","src","rounded","id","xs","AuthLayout","RouteWrapper","Component","component","isPrivate","rest","signed","useSelector","useEffect","document","title","Layout","render","BlogTag","defaultProps","BlogReply","owner","content","created_at","users","roundedCircle","Date","toDateString","comments","replies","Object","values","filter","item","post","Accordion","Toggle","as","eventKey","Collapse","map","idx","key","BlogItem","tags","blogDetail","substr","BlogList","posts","styling","numberItemsPerLoad","itemIndex","setItemIndex","loading","setLoading","postItems","keys","scrollEl","isComponentMounted","handleScroll","$scroll","target","scrollTop","clientHeight","scrollHeight","loadMore","setTimeout","addEventListener","removeEventListener","style","slice","overflow","height","queryPost","results","showLoading","haveMessage","messagesData","show","textMessage","message","accountOwner","titleEl","tagEl","contentEl","Alert","onClose","dismissible","checkValidity","submitData","setMilliseconds","split","Group","controlId","Label","Control","required","Text","rows","userNameEl","passWordEl","account","usn","pwd","BlogDetail","useParams","blogData","location","window","URLSearchParams","search","get","numberResultsFound","keywords","Routes","path","Dashboard","exact","BlogCreate","BlogSearchResult","SignIn","App","rootReducer","combineReducers","action","newPost","assignPosts","assignUsers","assignComments","status","persistConfig","storage","persistedReducer","persistReducer","verifyAccount","selectAllQueryPost","queryNewPost","selectQueryPost","startup","root","fetchApi","params","put","delay","call","filterResults","password","username","select","testReg","RegExp","replace","match","join","fork","takeLatest","Boolean","hostname","store","sagaMiddleware","createSagaMiddleware","createStore","applyMiddleware","persistor","persistStore","runSaga","run","configureStore","rootSaga","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"glPAIeA,EAFCC,c,eCET,SAASC,EAASC,GACvB,OAAOA,EAAMC,SAASC,MAGjB,SAASC,EAASH,GACvB,OAAOA,EAAMI,SAGR,SAASC,EAAYL,GAC1B,OAAOA,EAAMM,YAGR,SAASC,EAAiBP,GAC/B,OAAuC,IAAhCA,EAAMQ,YAAYC,SAiBpB,SAASC,EAAaV,GAC3B,OAAOA,EAAMQ,YAAYG,M,YC/BZ,SAASC,EAAT,GAAsC,IAAbC,EAAY,EAAZA,SACtC,OACE,kBAACC,EAAA,EAAD,KACGD,G,4ECHQ,SAASE,IAAkB,IAAD,EACHC,oBAAS,GADN,mBAChCC,EADgC,KACpBC,EADoB,KAEjCC,EAAWC,iBAAO,MAQxB,OACE,oCAEIH,EACE,kBAAC,IAAD,CAAUI,GAAE,wBAAmBF,EAASG,QAAQC,SAC/C,GAEL,kBAACC,EAAA,EAAD,CAAMC,SAdW,SAAAC,GACnBA,EAAMC,iBACHR,EAASG,QAAQC,MAAMK,OAAOC,OAAS,GACxCX,GAAc,KAYZ,kBAACY,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,YAAY,uBACZC,aAAW,uBACXC,mBAAiB,eACjBC,KAAK,KACLC,IAAKjB,EACLkB,SAAU,WACRnB,GAAc,MAGlB,kBAACY,EAAA,EAAWQ,OAAZ,KACE,kBAACC,EAAA,EAAD,CACEC,KAAK,SACLC,QAAQ,oBACRN,KAAK,KACLO,QAAS,WACPxB,GAAc,KALlB,cCoBGyB,mBAPf,SAAyB3C,GAEvB,MAAO,CACL4C,WAFiB5C,EAAMI,SAASJ,EAAMQ,YAAYC,WAAaT,EAAMI,SAASJ,EAAMQ,YAAYC,UAAUoC,QAM/FF,EA/CR,YAAiC,IAATG,EAAQ,oBAC7BC,EAAuBD,EAAvBC,SAAUH,EAAaE,EAAbF,SAElB,OACE,oCACE,kBAACI,EAAA,EAAD,CAAKC,UAAU,aACb,kBAACC,EAAA,EAAD,KACE,kBAAC,gBAAD,CAAe7B,GAAG,KAChB,kBAACkB,EAAA,EAAD,CAAQE,QAAQ,OAAOQ,UAAU,gBAC/B,kBAACE,EAAA,EAAD,CAAOC,IAAI,iCAAiCC,SAAO,OAIzD,kBAACH,EAAA,EAAD,CAAKD,UAAU,cACb,0BAAMA,UAAU,QAAQL,GACxB,kBAACL,EAAA,EAAD,CACEE,QAAQ,kBACRN,KAAK,KACLO,QAAS,WACPK,EHEL,CACLP,KAAM,kBACNc,IAAK,MGRC,YAWJ,kBAACN,EAAA,EAAD,CAAKC,UAAU,QACb,kBAACC,EAAA,EAAD,CAAKK,GAAG,KACN,kBAAC,gBAAD,CAAelC,GAAG,gBAChB,kBAACkB,EAAA,EAAD,CAAQE,QAAQ,kBAAkBN,KAAK,MAAvC,iBAGJ,kBAACe,EAAA,EAAD,CAAKK,GAAG,IAAIN,UAAU,cACpB,kBAAClC,EAAD,YCnCK,SAASyC,EAAT,GAA4C,IAAtB3C,EAAqB,EAArBA,SAAqB,4BACxD,OACE,kBAACC,EAAA,EAAD,KACE,kBAAC,EAAD,MACCD,GCAQ,SAAS4C,EAAT,GAIX,IAHSC,EAGV,EAHDC,UACAC,EAEC,EAFDA,UACGC,EACF,yCACKC,EAASC,YAAYxD,GAU3B,GARAyD,qBAAU,WACRC,SAASC,MAAT,UAAoBL,EAAKK,OAAS,YAOhCN,IAAcE,EAChB,OAAO,kBAAC,IAAD,CAAUzC,GAAG,YAOtB,IAAKuC,GAAaE,EAChB,OAAO,kBAAC,IAAD,CAAUzC,GAAG,MAGtB,IAAM8C,EAASL,EAASN,EAAa5C,EAKrC,OACE,kBAAC,IAAD,iBACMiD,EADN,CAEEO,OAAS,SAACtB,GAAD,OACP,kBAACqB,EAAD,CAAQD,MAAOL,EAAKK,OAAQ,SAC1B,kBAACR,EAAcZ,QC3CV,SAASuB,EAAT,GAA8B,IACpCxD,EADmC,oBACnCA,SACP,OACE,oCACE,kBAAC0B,EAAA,EAAD,CAAQE,QAAQ,eAAeN,KAAK,MAAMtB,GAAmB,KDmDnE4C,EAAaa,aAAe,CAC1BV,WAAW,G,YEpDE,SAASW,EAAT,GAAgC,IAATzB,EAAQ,oBACrC0B,EAA8B1B,EAA9B0B,MAAOC,EAAuB3B,EAAvB2B,QAASC,EAAc5B,EAAd4B,WACjBC,EAAQZ,YAAY5D,GAE1B,OACE,kBAAC6C,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,CAAKK,GAAG,KACN,kBAACJ,EAAA,EAAD,CAAOC,IAAI,iCAAiCwB,eAAa,KAE3D,kBAAC1B,EAAA,EAAD,CAAKK,GAAG,MACN,2BACE,gCAAWoB,EAAMH,IAAUG,EAAMH,GAAO3B,MAAU,aAAoB,IACtE,0BAAMI,UAAU,cAAc,IAAI4B,KAAKH,GAAYI,iBAErD,2BAAIL,KCiBG9B,mBAJf,SAAyB3C,GACvB,MAAO,KAGM2C,EA3BR,YAAkC,IAChCW,EAD+B,oBAC/BA,GACDyB,EAAWhB,YAAY1D,GACvB2E,EAAUC,OAAOC,OAAOH,GAAUI,QAAO,SAACC,GAAD,OAAUA,EAAKC,OAAS/B,KACvE,OACE,kBAACgC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAUC,OAAX,CAAkBC,GAAIjD,IAAQE,QAAQ,OAAOgD,SAAS,IAAIxC,UAAU,2BAApE,UACM+B,EAAQnD,OADd,aAGA,6BACA,kBAACyD,EAAA,EAAUI,SAAX,CAAoBD,SAAS,KAC3B,oCACGT,EAAQW,KAAI,SAACP,EAAMQ,GAClB,OACE,kBAACrB,EAAD,eAAWsB,IAAKD,GAASR,aCfxB,SAASU,EAAT,GAA+B,IAAThD,EAAQ,oBACpCQ,EAA2DR,EAA3DQ,GAAIY,EAAuDpB,EAAvDoB,MAAOM,EAAgD1B,EAAhD0B,MAAOC,EAAyC3B,EAAzC2B,QAASsB,EAAgCjD,EAAhCiD,KAAMrB,EAA0B5B,EAA1B4B,WAAYsB,EAAclD,EAAdkD,WAC9CrB,EAAQZ,YAAY5D,GAE1B,OACE,kBAAC6C,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,CAAKK,GAAG,KAAKN,UAAU,eACrB,kBAAC,gBAAD,CAAe5B,GAAE,gBAAWiC,IAC1B,kBAACf,EAAA,EAAD,CAAQE,QAAQ,OAAOQ,UAAU,aAC/B,4BAAKiB,MAIX,kBAAChB,EAAA,EAAD,CAAKK,GAAG,KACN,wCAAgBoB,EAAMH,IAAUG,EAAMH,GAAO3B,MAAU,aACvD,0CAAgB,IAAIgC,KAAKH,GAAYI,iBAEvC,kBAAC5B,EAAA,EAAD,CAAKD,UAAU,aAAaM,GAAG,OAC1BwC,GAAQA,EAAKJ,KAAI,SAACP,EAAMQ,GACzB,OACE,kBAACvB,EAAD,CAASwB,IAAKD,GAAMR,OAI1B,kBAAClC,EAAA,EAAD,CAAKK,GAAG,MACHyC,EACD,2BAAIvB,GAEJ,6BAAMA,GAAWA,EAAQwB,OAAO,EAAG,KAAMxB,EAAQ5C,OAAS,IAAM,MAAQ,KAG5E,kBAACqB,EAAA,EAAD,CAAKK,GAAG,MACN,kBAAC,EAAD,CAAaD,GAAIA,MCrCV,SAAS4C,EAAT,GAA+B,IAATpD,EAAQ,oBACnCqD,EAAuCrD,EAAvCqD,MAAOC,EAAgCtD,EAAhCsD,QAASC,EAAuBvD,EAAvBuD,mBADmB,EAETrF,mBAAS,GAFA,mBAEpCsF,EAFoC,KAEzBC,EAFyB,OAGbvF,oBAAS,GAHI,mBAGpCwF,EAHoC,KAG3BC,EAH2B,KAIrCC,EAAYzB,OAAO0B,KAAKR,GAAOR,KAAI,SAAAE,GAAG,OAAIM,EAAMN,MAChDe,EAAWxF,iBAAO,MAClByF,EAAqBzF,kBAAO,GAE5B0F,EAAe,SAACpF,GACpB,IAAMqF,EAAUrF,EAAMsF,OAEpBD,EAAQE,UAAYF,EAAQG,cAC5BH,EAAQI,cAERC,KAIEA,EAAW,WACfX,GAAW,GACXY,YAAW,WACNR,EAAmBvF,UACpBiF,EAAaD,EAAY,GACzBG,GAAW,MAEZ,MAiBL,OAdAzC,qBAAU,WACR6C,EAAmBvF,SAAU,EAC7B,IAAMyF,EAAUH,EAAStF,QAKzB,OAJKgF,EAAYD,GAAuBK,EAAU7E,QAChDkF,EAAQO,iBAAiB,SAAUR,GAAc,GAG5C,WACLD,EAAmBvF,SAAU,EAC7ByF,EAAQQ,oBAAoB,SAAUT,GAAc,MAGrD,CAACR,EAAWH,IAGb,oCACE,yBACE/D,IAAKwE,EACLY,MAAOpB,GAGLM,EAAUe,MAAM,EAAGnB,EAAYD,GAAoBV,KAAI,SAACP,EAAMQ,GAC5D,OACE,kBAACE,EAAD,eAAUD,IAAKD,GAASR,QAM9BoB,EACE,kBAACjE,EAAA,EAAD,CAAQE,QAAQ,qBAAhB,cACE,IAMZyD,EAAS5B,aAAe,CACtB6B,MAAO,GACPC,QAAS,CACPsB,SAAU,OACV,UAAa,SACbC,OAAQ,uBAEVtB,mBAAoB,GCnDP1D,mBAPf,SAAyB3C,GACvB,MAAO,CACL4H,UAAW5H,EAAMC,SAAS4H,SAAW,GACrCC,YAAa9H,EAAMC,SAASU,SAIjBgC,EAtBR,YAAgC,IAATG,EAAQ,oBAC5BC,EAAqCD,EAArCC,SAAU6E,EAA2B9E,EAA3B8E,UAAWE,EAAgBhF,EAAhBgF,YAO7B,OALA9D,qBAAU,WACRjB,EAAS,CAAEP,KAAM,6BAEhB,IAGD,6BACIsF,EAAc,UAAa,kBAAC5B,EAAD,CAAUC,MAAOyB,Q,QCuErCjF,mBATf,SAAyB3C,GACvB,MAAO,CACL+H,YAAa/H,EAAMgI,aAAaC,KAChCC,YAAalI,EAAMgI,aAAaG,QAChCC,aAAcpI,EAAMQ,YAAYC,SAChCqH,YAAa9H,EAAMC,SAASU,SAIjBgC,EA7ER,YAAiC,IAATG,EAAQ,oBAEnCC,EAKED,EALFC,SACAqF,EAIEtF,EAJFsF,aACAN,EAGEhF,EAHFgF,YACAC,EAEEjF,EAFFiF,YACAG,EACEpF,EADFoF,YAEIG,EAAUjH,iBAAO,MACvBkH,EAAQlH,iBAAO,MACfmH,EAAYnH,iBAAO,MAsBnB,OApBA4C,qBAAU,WACRjB,EZgCK,CACLP,KAAM,mBY/BL,IAkBD,kBAACQ,EAAA,EAAD,CAAKC,UAAU,0BACb,kBAACC,EAAA,EAAD,CAAKK,GAAG,KACHwE,EACD,kBAACS,EAAA,EAAD,CAAO/F,QAAQ,UAAUQ,UAAU,OAAOwF,QAAS,kBAAM1F,EZS1D,CACLP,KAAM,kBYVkFkG,aAAW,GAC1FR,GAED,GACJ,kBAAC1G,EAAA,EAAD,CAAMC,SAvBS,SAAAC,GAEnB,GADcA,EAAMsF,OACX2B,iBAAmBN,EAAQ/G,QAAQC,MAAMK,OAAOC,OAAS,EAAG,CACnE,IAAM+G,EAAa,CACjB,MAASR,EACT,YAAc,IAAIvD,MAAOgE,gBAAgB,GACzC,MAASR,EAAQ/G,QAAQC,MACzB,QAAWgH,EAAUjH,QAAQC,MAC7B,KAAQ+G,EAAMhH,QAAQC,MAAMuH,MAAM,KAAKnD,KAAI,SAAAP,GAAI,OAAIA,EAAKxD,UAAQuD,QAAO,SAAAC,GAAI,OAAIA,EAAKvD,OAAS,MAE/FkB,EZIG,CACLP,KAAM,iBACN6C,KYNyBuD,IAEzBlH,EAAMC,mBAYA,kBAACH,EAAA,EAAKuH,MAAN,CAAYC,UAAU,kBACpB,kBAACxH,EAAA,EAAKyH,MAAN,cACA,kBAACzH,EAAA,EAAK0H,QAAN,CAAc1G,KAAK,OAAOR,YAAY,cAAcmH,UAAQ,EAAC/G,IAAKiG,KAGpE,kBAAC7G,EAAA,EAAKuH,MAAN,CAAYC,UAAU,iBACpB,kBAACxH,EAAA,EAAKyH,MAAN,aACA,kBAACzH,EAAA,EAAK0H,QAAN,CAAc1G,KAAK,OAAOR,YAAY,4BAA4BI,IAAKkG,IACvE,kBAAC9G,EAAA,EAAK4H,KAAN,CAAWnG,UAAU,cAArB,sEAKF,kBAACzB,EAAA,EAAKuH,MAAN,CAAYC,UAAU,oBACpB,kBAACxH,EAAA,EAAKyH,MAAN,gBACA,kBAACzH,EAAA,EAAK0H,QAAN,CAAc1D,GAAG,WAAW6D,KAAK,IAAIrH,YAAY,gBAAgBI,IAAKmG,KAGxE,kBAAChG,EAAA,EAAD,CAAQE,QAAQ,UAAUD,KAAK,UAC3BsF,EAAc,UAAY,gBCUzBnF,mBAPf,SAAyB3C,GACvB,MAAO,CACL+H,YAAa/H,EAAMgI,aAAaC,KAChCC,YAAalI,EAAMgI,aAAaG,WAIrBxF,EArER,YAA6B,IAATG,EAAQ,oBACzBC,EAAuCD,EAAvCC,SAAUgF,EAA6BjF,EAA7BiF,YAAaG,EAAgBpF,EAAhBoF,YACzB1B,EAAUzC,YAAYrD,GACtB4I,EAAalI,iBAAO,MAC1BmI,EAAanI,iBAAO,MAoBpB,OAlBA4C,qBAAU,WACRjB,EbqCK,CACLP,KAAM,mBapCL,IAgBD,kBAACQ,EAAA,EAAD,CAAKC,UAAU,+BACb,kBAACC,EAAA,EAAD,CAAKK,GAAG,KACN,uCACCwE,EACC,kBAACS,EAAA,EAAD,CACE/F,QAAQ,UACRQ,UAAU,OACVwF,QAAS,kBAAM1F,EbYlB,CACLP,KAAM,kBab0CkG,aAAW,GAElDR,GAED,GACJ,kBAAC1G,EAAA,EAAD,CAAMC,SA1BS,SAAAC,GACnBA,EAAMC,iBAEJ2H,EAAWhI,QAAQC,MAAMM,OAAS,GAClC0H,EAAWjI,QAAQC,MAAMM,OAAS,GAElCkB,EbLG,CACLP,KAAM,iBACNgH,QaGyB,CACrBC,IAAKH,EAAWhI,QAAQC,MACxBmI,IAAKH,EAAWjI,QAAQC,WAmBtB,kBAACC,EAAA,EAAKuH,MAAN,CAAYC,UAAU,qBACpB,kBAACxH,EAAA,EAAKyH,MAAN,kBACA,kBAACzH,EAAA,EAAK0H,QAAN,CAAc9G,IAAKkH,EAAY9G,KAAK,OAAOR,YAAY,oBACvD,kBAACR,EAAA,EAAK4H,KAAN,CAAWnG,UAAU,cAArB,2BAKF,kBAACzB,EAAA,EAAKuH,MAAN,CAAYC,UAAU,qBACpB,kBAACxH,EAAA,EAAKyH,MAAN,iBACA,kBAACzH,EAAA,EAAK0H,QAAN,CAAc9G,IAAKmH,EAAY/G,KAAK,WAAWR,YAAY,aAC3D,kBAACR,EAAA,EAAK4H,KAAN,CAAWnG,UAAU,cAArB,8BAIF,kBAACV,EAAA,EAAD,CAAQE,QAAQ,UAAUD,KAAK,UAC5BgE,EAAU,aAAe,eCzDvB,SAASmD,IAAc,IAC5BrG,EAAOsG,cAAPtG,GACF6C,EAAQpC,YAAYhE,GACpB8J,IAAe1D,EAAM7C,IAAO6C,EAAM7C,IAAS,GAEjD,OACE,yBAAKL,UAAU,QAEXgC,OAAO0B,KAAKkD,GAAUhI,OAAS,EAAK,kBAACiE,EAAD,iBAAe+D,EAAf,CAA0B7D,YAAU,KAAO,ICqCxErD,mBAPf,SAAyB3C,GACvB,MAAO,CACL4H,UAAW5H,EAAMC,SAAS4H,SAAW,GACrCC,YAAa9H,EAAMC,SAASU,SAIjBgC,EA9CR,YAAuC,IAgDjBmH,EAhDQhH,EAAQ,oBACnCC,EAAqCD,EAArCC,SAAU6E,EAA2B9E,EAA3B8E,UAAWE,EAAgBhF,EAAhBgF,YACvB3B,EAAQyB,EACRjH,GA6CqBmJ,EA7CAC,OAAOD,SA+C3B,CACLnJ,MAFmB,IAAIqJ,gBAAgBF,EAASG,QAE5BC,IAAI,UAAY,KA/ChCC,EAAqBlF,OAAO0B,KAAKR,GAAOtE,OAU9C,OARAmC,qBAAU,WACRjB,EAAS,CACPP,KAAM,qBACN4H,SAAUzJ,EAAMA,UAGjB,CAACA,EAAMA,QAGR,kBAACqC,EAAA,EAAD,CAAKC,UAAU,0BACb,kBAACC,EAAA,EAAD,CAAKK,GAAG,KACN,qDAAuB5C,EAAMA,MAA7B,YAAsCwJ,EAAtC,MAEGrC,EAYC,uBAAG7E,UAAU,cAAb,WAZakH,EAAqB,EAClC,kBAACjE,EAAD,CACEC,MAAOA,EACPC,QAAS,CACPsB,SAAU,OACV,UAAa,SACbC,OAAQ,yBAIZ,uBAAG1E,UAAU,cAAb,wBCzBG,SAASoH,IACtB,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAOC,KAAK,IAAI3G,UAAW4G,EAAWC,OAAK,EAAC5G,WAAS,EAACM,MAAM,cAC5D,kBAAC,EAAD,CAAOoG,KAAK,eAAe3G,UAAW8G,EAAYD,OAAK,EAAC5G,WAAS,EAACM,MAAM,gBACxE,kBAAC,EAAD,CAAOoG,KAAK,YAAY3G,UAAWgG,EAAY/F,WAAS,EAACM,MAAM,gBAC/D,kBAAC,EAAD,CAAOoG,KAAK,UAAU3G,UAAW+G,EAAkB9G,WAAS,EAACM,MAAM,gBAGnE,kBAAC,EAAD,CAAOoG,KAAK,UAAU3G,UAAWgH,EAAQzG,MAAM,aCHtC0G,MAVf,WACE,OACE,yBAAK3H,UAAU,OACb,kBAAC,IAAD,CAAQpD,QAASA,GACf,kBAACwK,EAAD,S,wBC0HR,IAQeQ,EARKC,YAAgB,CAClC7K,SAlIK,WAEK,IAFaD,EAEd,uDAFsB,CAC/BW,OAAO,GACNoK,EAAQ,uCACT,OAAQA,EAAOvI,MACb,IAAK,kBACH,IAAIwI,EAAO,eAAQD,EAAO1F,MAE1B,OADA2F,EAAQ1H,IAAK,IAAIuB,MAAOgE,gBAAgB,GACjC,eACF7I,EADL,CAEEE,MAAM,eACDF,EAAME,MADN,eAEF8K,EAAQ1H,GAAK0H,MAGlB,IAAK,gBACH,IAAMC,EAAc,GAKpB,OAJAF,EAAO5E,MAAMR,KAAI,SAACP,GAEhB,OADA6F,EAAY7F,EAAK9B,IAAM8B,EAChBA,KAEF,eACFpF,EADL,CAEEE,MAAM,eACDF,EAAME,MADN,GAEA+K,KAGT,IAAK,cACH,OAAO,eACFjL,EADL,CAEEW,OAAO,IAEX,IAAK,sBACH,OAAO,eACFX,EADL,CAEE6H,QAASkD,EAAOlD,UAEpB,IAAK,mBACH,OAAO,eACF7H,EADL,CAEEW,OAAO,IAEX,QACA,OAAOX,IAwFXI,SApFK,WAAuC,IAArBJ,EAAoB,uDAAZ,GAAI+K,EAAQ,uCAC3C,OAAQA,EAAOvI,MACb,IAAK,gBACH,IAAM0I,EAAc,GAKpB,OAJAH,EAAOpG,MAAMgB,KAAI,SAACP,GAEhB,OADA8F,EAAY9F,EAAK9B,IAAM8B,EAChBA,KAEF,eACFpF,EADL,GAEKkL,GAEP,QACE,OAAOlL,IAwEXM,YApEK,WAA0C,IAArBN,EAAoB,uDAAZ,GAAI+K,EAAQ,uCAC9C,OAAQA,EAAOvI,MACb,IAAK,mBACH,IAAM2I,EAAiB,GAKvB,OAJAJ,EAAOhG,SAASY,KAAI,SAACP,GAEnB,OADA+F,EAAe/F,EAAK9B,IAAM8B,EACnBA,KAEF,eACFpF,EADL,GAEKmL,GAEP,QACE,OAAOnL,IAwDXQ,YApDK,WAIK,IAJgBR,EAIjB,uDAJyB,CAClCS,UAAW,EACXE,OAAO,EACPyK,OAAQ,YACPL,EAAQ,uCACT,OAAQA,EAAOvI,MACb,IAAK,kBACH,OAAO,eACFxC,EADL,CAEES,SAA+B,kBAAdsK,EAAOzH,GAAkByH,EAAOzH,IAAM,IAE3D,IAAK,gBACH,OAAO,eACFtD,EADL,CAEEW,MAAOoK,EAAO/K,QAElB,IAAK,iBACH,OAAO,eACFA,EADL,CAEEoL,OAAQL,EAAOK,SAEnB,QACE,OAAOpL,IA+BXgI,aA3BK,WAGK,IAHiBhI,EAGlB,uDAH0B,CACnCmI,QAAS,GACTF,MAAM,GACL8C,EAAQ,uCACT,OAAQA,EAAOvI,MACb,IAAK,kBACH,OAAO,eACFxC,EADL,CAEEmI,QAAS4C,EAAO5C,QAChBF,MAAM,IAEV,IAAK,eACH,OAAO,eACFjI,EADL,CAEEmI,QAAS,GACTF,MAAM,IAEV,QACE,OAAOjI,M,wBCzHPqL,GAAgB,CACpBxF,IAAK,OACLyF,Q,OAAAA,GAGIC,GAAmBC,YAAeH,GAAeR,G,wECMtCY,I,aAkCAC,I,aAeAC,I,aAmBAC,I,aA8BAC,I,aA8BQC,IA3IlB,SAASC,GAASlJ,GACvB,OAAQA,GACN,IAAK,QACH,OAAOsD,GACT,IAAK,WACH,OAAOpB,GACT,QACE,OAAOJ,IAIN,SAAU8G,GAAcO,GAAxB,4EAEL,OADQxC,EAAYwC,EAAZxC,QADH,SAECyC,aAAI,CACRzJ,KAAM,gBACNxC,OAAO,IAJJ,OAML,OANK,SAMCkM,aAAM,KANP,OAOS,OAPT,SAOeC,aAAKJ,GAAU,SAP9B,UAOCpH,EAPD,SAQCyH,EAAgBzH,EAAMQ,QAAO,SAAAC,GAAI,OAAIA,EAAKiH,WAAa7C,EAAQE,KAAOtE,EAAKkH,WAAa9C,EAAQC,QACnF,GATd,iBAUH,OAVG,UAUGwC,aAAI,CACRzJ,KAAM,kBACNc,GAAI8I,EAAc,GAAG9I,KAZpB,QAcH,OAdG,UAcG2I,aAAI,CACRzJ,KAAM,iBACN4I,OAAQ,WAhBP,gCAmBH,OAnBG,UAmBGa,aAAI,CACRzJ,KAAM,iBACN4I,OAAQ,mBArBP,QAuBH,OAvBG,UAuBGa,aAAI,CACRzJ,KAAM,kBACN2F,QAAS,kCAzBR,QA4BL,OA5BK,UA4BC8D,aAAI,CACRzJ,KAAM,gBACNxC,OAAO,IA9BJ,yCAkCA,SAAU0L,KAAV,wEACL,OADK,SACCO,aAAI,CACRzJ,KAAM,gBAFH,OAIL,OAJK,SAIC0J,aAAM,KAJP,OAKS,OALT,SAKeK,cAAO,SAAAvM,GAAK,OAAIA,EAAMC,SAASC,SAL9C,OAML,OADMiG,EALD,gBAMC8F,aAAI,CACRzJ,KAAM,sBACNqF,QAAS1B,IARN,OAUL,OAVK,UAUC8F,aAAI,CACRzJ,KAAM,qBAXH,yCAeA,SAAUmJ,GAAaK,GAAvB,wEAEL,OADQ3G,EAAS2G,EAAT3G,KADH,SAEC4G,aAAI,CACRzJ,KAAM,gBAHH,OAKL,OALK,SAKC0J,aAAM,KALP,OAML,OANK,SAMCD,aAAI,CACRzJ,KAAM,kBACN6C,SARG,OAUL,OAVK,SAUC4G,aAAI,CACRzJ,KAAM,kBACN2F,QAAS,6BAZN,OAcL,OAdK,UAcC8D,aAAI,CACRzJ,KAAM,qBAfH,yCAmBA,SAAUoJ,GAAgBI,GAA1B,8EAEL,OADQ5B,EAAa4B,EAAb5B,SADH,SAEC6B,aAAI,CACRzJ,KAAM,gBAHH,OAKL,OALK,SAKC0J,aAAM,KALP,OAMS,OANT,SAMeK,cAAO,SAAAvM,GAAK,OAAIA,EAAMC,SAASC,SAN9C,OAqBL,OAfMiG,EAND,OAQCqG,EAAU,IAAIC,OAAJ,WAAerC,EAASxI,OAAO8K,QAAQ,MAAO,KAA9C,KAAuD,MACnE7E,EAAU,GACd5C,OAAO0B,KAAKR,GAAOR,KAAI,SAAAE,GACrB,IAAMT,EAAOe,EAAMN,GAQnB,OANET,EAAKlB,MAAMyI,MAAMH,IACjBpH,EAAKX,QAAQkI,MAAMH,IACnBpH,EAAKW,KAAK6G,KAAK,KAAKD,MAAMH,MAE1B3E,EAAQzC,EAAK9B,IAAb,eAAuB8B,IAElBA,KAnBJ,UAqBC6G,aAAI,CACRzJ,KAAM,sBACNqF,QAASA,IAvBN,QAyBL,OAzBK,UAyBCoE,aAAI,CACRzJ,KAAM,qBA1BH,yCA8BA,SAAUqJ,KAAV,4EACL,OADK,SACCK,aAAM,KADP,OAES,OAFT,SAEeC,aAAKJ,GAAU,SAF9B,OAGS,OADR5F,EAFD,gBAGegG,aAAKJ,GAAU,SAH9B,OAIY,OADXpH,EAHD,iBAIkBwH,aAAKJ,GAAU,YAJjC,QAKL,OADMhH,EAJD,iBAKCkH,aAAI,CACRzJ,KAAM,gBACN2D,UAPG,QASL,OATK,UASC8F,aAAI,CACRzJ,KAAM,gBACNmC,UAXG,QAaL,OAbK,UAaCsH,aAAI,CACRzJ,KAAM,mBACNuC,aAfG,QAiBL,OAjBK,UAiBCkH,aAAI,CACRzJ,KAAM,gBACNxC,OAAO,IAnBJ,QAqBL,OArBK,UAqBCiM,aAAI,CACRzJ,KAAM,iBACN4I,OAAQ,aAvBL,QAyBL,OAzBK,UAyBCa,aAAI,CACRzJ,KAAM,iBA1BH,yCA8BQ,SAAUsJ,KAAV,kEACb,OADa,SACPe,aAAKhB,IADE,OAEb,OAFa,SAEPiB,aAAW,iBAAkBrB,IAFtB,OAGb,OAHa,SAGPqB,aAAW,yBAA0BpB,IAH9B,OAIb,OAJa,SAIPoB,aAAW,qBAAsBlB,IAJ1B,OAKb,OALa,UAKPkB,aAAW,iBAAkBnB,IALtB,yCCrIKoB,QACW,cAA7BhD,OAAOD,SAASkD,UAEe,UAA7BjD,OAAOD,SAASkD,UAEhBjD,OAAOD,SAASkD,SAASL,MACvB,2DCNN,IAAMM,GHCS,WACb,IAAMC,EAAiBC,cACnBF,EAAQG,YAAY7B,GAAkB8B,YAAgBH,IACtDI,EAAYC,YAAaN,GAC7B,OAAO,eACFA,EADL,CAEEK,YACAE,QAASN,EAAeO,MGRdC,GACdT,GAAMO,QAAQG,IAEdC,IAASxJ,OACP,kBAAC,IAAD,CAAU6I,MAAOA,IACf,kBAAC,gBAAD,KACE,kBAAC,EAAD,QAGJhJ,SAAS4J,eAAe,SD8GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.3cf0527e.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\n\nconst history = createBrowserHistory();\n\nexport default history;\n","export function selectCount(reddit) {\n  return reddit.counter;\n}\n\nexport function getPosts(state) {\n  return state.postData.items;\n}\n\nexport function getUsers(state) {\n  return state.userData;\n}\n\nexport function getComments(state) {\n  return state.commentData;\n}\n\nexport function getSignInAccount(state) {\n  return state.accountData.loggedID !== -1;\n}\n\nexport function verifyAccount(account) {\n  return {\n    type: 'VERIFY_ACCOUNT',\n    account,\n  };\n}\n\nexport function logoutAccount() {\n  return {\n    type: 'RECEIVE_ACCOUNT',\n    id: -1,\n  };\n}\n\nexport function queryAccount(state) {\n  return state.accountData.query;\n}\n\nexport function createNewPost(post) {\n  return {\n    type: 'QUERY_NEW_POST',\n    post\n  };\n}\n\nexport function showMessage(message) {\n  return {\n    type: 'RECEIVE_MESSAGE',\n    message\n  };\n}\n\nexport function hideMessage() {\n  return {\n    type: 'HIDE_MESSAGE',\n  };\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container } from 'react-bootstrap';\n\nexport default function DefaultLayout({ children }) {\n  return (\n    <Container>\n      {children}\n    </Container>\n  );\n}\n\nDefaultLayout.propTypes = {\n  children: PropTypes.element.isRequired\n};\n","import React, { useState, useRef } from 'react';\nimport { Form, Button, InputGroup, FormControl } from 'react-bootstrap';\nimport { Redirect } from \"react-router-dom\";\n\nexport default function BlogSearchForm() {\n  const [formAction, setFormAction] = useState(false);\n  const searchEl = useRef(null);\n  const handleSubmit = event => {\n    event.preventDefault();\n    if(searchEl.current.value.trim().length > 0) {\n      setFormAction(true);\n    }\n  };\n\n  return (\n    <>\n      {\n        formAction ? (\n          <Redirect to={`/search?query=${searchEl.current.value}`} />\n        ): ''\n      }\n      <Form onSubmit={handleSubmit}>\n        <InputGroup>\n          <FormControl\n            placeholder=\"Enter Search Keyword\"\n            aria-label=\"Enter Search Keyword\"\n            aria-describedby=\"basic-addon2\"\n            size='sm'\n            ref={searchEl}\n            onChange={() => {\n              setFormAction(false);\n            }}\n          />\n          <InputGroup.Append>\n            <Button\n              type=\"submit\"\n              variant=\"outline-secondary\"\n              size='sm'\n              onClick={() => {\n                setFormAction(false);\n              }}\n            >\n              Search\n            </Button>\n          </InputGroup.Append>\n        </InputGroup>\n      </Form>\n    </>\n  );\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Row, Col, Button, Image } from 'react-bootstrap';\nimport BlogSearchForm from '../features/BlogSearchForm';\nimport { logoutAccount } from '../actions';\n\nexport function BlogHeader({...props}) {\n  const { dispatch, userName } = props;\n\n  return (\n    <>\n      <Row className='mb-3 mt-3'>\n        <Col>\n          <LinkContainer to='/' >\n            <Button variant='link' className='p-0 border-0'>\n              <Image src=\"https://via.placeholder.com/50\" rounded />\n            </Button>\n          </LinkContainer>\n        </Col>\n        <Col className='text-right'>\n          <span className='mr-2'>{userName}</span>\n          <Button\n            variant='outline-primary'\n            size='sm'\n            onClick={() => {\n              dispatch(logoutAccount())\n            }}\n          >\n            Logout\n          </Button>\n        </Col>\n      </Row>\n      <Row className='mb-3'>\n        <Col xs='6'>\n          <LinkContainer to='/blog/create' >\n            <Button variant='outline-primary' size='sm'>Create Post</Button>\n          </LinkContainer>\n        </Col>\n        <Col xs='6' className='text-right'>\n          <BlogSearchForm />\n        </Col>\n      </Row>\n    </>\n  );\n}\n\nfunction mapStateToProps(state) {\n  const userName = !!state.userData[state.accountData.loggedID] && state.userData[state.accountData.loggedID].name;\n  return {\n    userName\n  }\n}\n\nexport default connect(mapStateToProps)(BlogHeader);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport BlogHeader from '../../../features/BlogHeader';\nimport { Container } from 'react-bootstrap';\n\nexport default function AuthLayout({ children, ...rest }) {\n  return (\n    <Container>\n      <BlogHeader />\n      {children}\n    </Container>\n  );\n}\n\nAuthLayout.propTypes = {\n  children: PropTypes.element.isRequired\n};\n","import React, { useEffect } from 'react';\nimport PropTypes from \"prop-types\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useSelector } from 'react-redux';\nimport { getSignInAccount } from '../actions';\n\nimport DefaultLayout from \"../pages/_layouts/default\";\nimport AuthLayout from \"../pages/_layouts/auth\";\n\nexport default function RouteWrapper({\n  component: Component,\n  isPrivate,\n  ...rest\n}) {\n  const signed = useSelector(getSignInAccount);\n\n  useEffect(() => {\n    document.title = `${rest.title || 'Title'}`;\n  })\n\n  /**\n   * Redirect user to SignIn page if he tries to access a private route\n   * without authentication.\n   */\n  if (isPrivate && !signed) {\n    return <Redirect to=\"/signin\" />;\n  }\n\n  /**\n   * Redirect user to Main page if he tries to access a non private route\n   * (SignIn or SignUp) after being authenticated.\n   */\n  if (!isPrivate && signed) {\n    return <Redirect to=\"/\" />;\n  }\n\n  const Layout = signed ? AuthLayout : DefaultLayout;\n\n  /**\n   * If not included on both previous cases, redirect user to the desired route.\n   */\n  return (\n    <Route\n      {...rest}\n      render={ (props) => (\n        <Layout title={rest.title|| 'Title'} >\n          <Component {...props} />\n        </Layout>\n      )}\n    />\n  );\n}\n\nRouteWrapper.propTypes = {\n  isPrivate: PropTypes.bool,\n  component: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.object]).isRequired\n};\n\nRouteWrapper.defaultProps = {\n  isPrivate: false\n};\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\n\nexport default function BlogTag({...props}) {\n  const {children} = props;\n  return (\n    <>\n      <Button variant=\"outline-info\" size=\"sm\">{children}</Button>{' '}\n    </>\n  );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Row, Col, Image } from 'react-bootstrap';\nimport {\n  getUsers,\n } from '../actions';\n\nexport default function BlogReply({...props}) {\n  const {owner, content, created_at} = props;\n  const users = useSelector(getUsers);\n\n  return (\n    <Row>\n      <Col xs='1'>\n        <Image src=\"https://via.placeholder.com/50\" roundedCircle />\n      </Col>\n      <Col xs='11'>\n        <p>\n          <span>{( !!users[owner] && users[owner].name ) || 'Anonymous'}</span>{' '}\n          <span className='text-muted'>{new Date(created_at).toDateString()}</span>\n        </p>\n        <p>{content}</p>\n      </Col>\n    </Row>\n  );\n}\n","import React from 'react';\nimport { connect, useSelector } from 'react-redux';\nimport {\n  Accordion,\n  Button,\n } from 'react-bootstrap';\nimport BlogReply from './BlogReply';\nimport {\n  getComments,\n } from '../actions';\n\nexport function BlogComment({...props}) {\n  const {id} = props;\n  const comments = useSelector(getComments);\n  const replies = Object.values(comments).filter((item) => item.post === id);\n  return (\n    <Accordion>\n      <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\" className='text-muted p-0 border-0'>\n        {`${replies.length} replies`}\n      </Accordion.Toggle>\n      <hr/>\n      <Accordion.Collapse eventKey=\"0\">\n        <>\n          {replies.map((item, idx) => {\n            return (\n              <BlogReply key={idx} {...item} />\n            );\n          })}\n        </>\n      </Accordion.Collapse>\n    </Accordion>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {}\n}\n\nexport default connect(mapStateToProps)(BlogComment);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Button, Row, Col } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport {\n  getUsers,\n } from '../actions';\nimport BlogTag from './BlogTag';\nimport BlogComment from './BlogComment';\n\nexport default function BlogItem({...props}) {\n  const {id, title, owner, content, tags, created_at, blogDetail} = props;\n  const users = useSelector(getUsers);\n\n  return (\n    <Row >\n      <Col xs='12' className='text-center'>\n        <LinkContainer to={`/blog/${id}`}>\n          <Button variant='link' className='text-dark' >\n            <h3>{title}</h3>\n          </Button>\n        </LinkContainer>\n      </Col>\n      <Col xs='8'>\n        <p>Author: {( !!users[owner] && users[owner].name ) || 'Anonymous'}</p>\n        <p>Created at: {new Date(created_at).toDateString()}</p>\n      </Col>\n      <Col className='text-right' xs='4'>\n        {!!tags && tags.map((item, idx) => {\n          return (\n            <BlogTag key={idx}>{item}</BlogTag>\n          );\n        })}\n      </Col>\n      <Col xs='12'>\n        {!!blogDetail ? (\n          <p>{content}</p>\n        ) : (\n          <p>{!!content && content.substr(0, 100)}{content.length > 100 ? '...' : ''}</p>\n        )}\n      </Col>\n      <Col xs='12'>\n        <BlogComment id={id} />\n      </Col>\n    </Row>\n  );\n}\n\n","import React, { useState, useEffect, useRef } from 'react';\nimport { Button } from 'react-bootstrap';\nimport BlogItem from './BlogItem';\nimport PropTypes from 'prop-types';\n\nexport default function BlogList({...props}) {\n  const { posts, styling, numberItemsPerLoad } = props;\n  const [itemIndex, setItemIndex] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const postItems = Object.keys(posts).map(key => posts[key]);\n  const scrollEl = useRef(null);\n  const isComponentMounted = useRef(false);\n\n  const handleScroll = (event) => {\n    const $scroll = event.target;\n    if (\n      $scroll.scrollTop + $scroll.clientHeight >=\n      $scroll.scrollHeight\n    ) {\n      loadMore();\n    }\n  };\n\n  const loadMore = () => {\n    setLoading(true);\n    setTimeout(() => {\n      if(isComponentMounted.current) {\n        setItemIndex(itemIndex + 1);\n        setLoading(false);\n      }\n    }, 600);\n  };\n\n  useEffect(() => {\n    isComponentMounted.current = true;\n    const $scroll = scrollEl.current;\n    if( (itemIndex * numberItemsPerLoad) <= postItems.length) {\n      $scroll.addEventListener('scroll', handleScroll, true);\n    }\n\n    return(() => {\n      isComponentMounted.current = false;\n      $scroll.removeEventListener(\"scroll\", handleScroll, true);\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [itemIndex, posts]);\n\n  return (\n    <>\n      <div\n        ref={scrollEl}\n        style={styling}\n      >\n        {\n          postItems.slice(0, itemIndex * numberItemsPerLoad).map((item, idx) => {\n            return (\n              <BlogItem key={idx} {...item} />\n            );\n          })\n        }\n      </div>\n      {\n        loading ? (\n          <Button variant='outline-secondary'>Loading...</Button>\n        ) : ''\n      }\n    </>\n  );\n}\n\nBlogList.defaultProps = {\n  posts: {},\n  styling: {\n    overflow: 'auto',\n    'overflowX': 'hidden',\n    height: 'calc(100vh - 180px)',\n  },\n  numberItemsPerLoad: 4,\n}\n\nBlogList.propTypes = {\n  posts: PropTypes.object,\n  styling: PropTypes.object,\n  numberItemsPerLoad: PropTypes.number,\n};\n\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport BlogList from '../features/BlogList';\n\nexport function Dashboard({...props}) {\n  const { dispatch, queryPost, showLoading } = props;\n\n  useEffect(() => {\n    dispatch({ type: 'SELECT_ALL_QUERY_POSTS' });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div>\n      { showLoading ? 'Loading' : (<BlogList posts={queryPost} />) }\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    queryPost: state.postData.results || {},\n    showLoading: state.postData.query,\n  }\n}\n\nexport default connect(mapStateToProps)(Dashboard);","import React, { useRef, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Row, Col, Form, Button, Alert } from 'react-bootstrap';\nimport {\n  createNewPost,\n  hideMessage\n} from '../actions';\n\nexport function BlogCreate({...props}) {\n  const {\n    dispatch,\n    accountOwner,\n    showLoading,\n    haveMessage,\n    textMessage\n  } = props;\n  const titleEl = useRef(null),\n  tagEl = useRef(null),\n  contentEl = useRef(null);\n\n  useEffect(() => {\n    dispatch(hideMessage());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleSubmit = event => {\n    const $form = event.target;\n    if($form.checkValidity() && titleEl.current.value.trim().length > 0) {\n      const submitData = {\n        \"owner\": accountOwner,\n        \"created_at\": new Date().setMilliseconds(0),\n        \"title\": titleEl.current.value,\n        \"content\": contentEl.current.value,\n        \"tags\": tagEl.current.value.split(',').map(item => item.trim()).filter(item => item.length > 0)\n      };\n      dispatch(createNewPost(submitData));\n    }\n    event.preventDefault();\n  };\n\n  return (\n    <Row className=\"justify-content-center\">\n      <Col xs='8'>\n        { (haveMessage) ? (\n          <Alert variant='success' className='mt-2' onClose={() => dispatch(hideMessage())} dismissible>\n            {textMessage}\n          </Alert>\n        ) : '' }\n        <Form onSubmit={handleSubmit}>\n          <Form.Group controlId=\"formBasicTitle\">\n            <Form.Label>Title</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Enter Title\" required ref={titleEl}/>\n          </Form.Group>\n\n          <Form.Group controlId=\"formBasicTags\">\n            <Form.Label>Tags</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Enter Tags: tag1, tag2,..\" ref={tagEl}/>\n            <Form.Text className=\"text-muted\">\n              Entering tags should always be comma-separated. ex: tag1, tag2,..\n            </Form.Text>\n          </Form.Group>\n\n          <Form.Group controlId=\"formBasicContent\">\n            <Form.Label>Content</Form.Label>\n            <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"Enter Content\" ref={contentEl}/>\n          </Form.Group>\n\n          <Button variant=\"primary\" type=\"submit\">\n            { showLoading ? 'Loading' : 'Submit' }\n          </Button>\n        </Form>\n      </Col>\n    </Row>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    haveMessage: state.messagesData.show,\n    textMessage: state.messagesData.message,\n    accountOwner: state.accountData.loggedID,\n    showLoading: state.postData.query,\n  }\n}\n\nexport default connect(mapStateToProps)(BlogCreate);\n","import React, { useRef, useEffect } from \"react\";\nimport { connect, useSelector } from 'react-redux';\nimport { Alert, Row, Col, Form, Button } from 'react-bootstrap';\nimport {\n  verifyAccount,\n  queryAccount,\n  hideMessage,\n} from '../actions';\n\nexport function SignIn({...props}) {\n  const { dispatch, haveMessage, textMessage } = props;\n  const loading = useSelector(queryAccount);\n  const userNameEl = useRef(null),\n  passWordEl = useRef(null);\n\n  useEffect(() => {\n    dispatch(hideMessage());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if(\n      userNameEl.current.value.length > 0 &&\n      passWordEl.current.value.length > 0\n    ) {\n      dispatch(verifyAccount({\n        usn: userNameEl.current.value,\n        pwd: passWordEl.current.value,\n      }));\n    }\n  };\n\n  return (\n    <Row className=\"justify-content-center mt-5\">\n      <Col xs='8'>\n        <h3>Sign In</h3>\n        {haveMessage ? (\n          <Alert\n            variant='warning'\n            className='mt-2'\n            onClose={() => dispatch(hideMessage())} dismissible\n          >\n            {textMessage}\n          </Alert>\n        ) : ''}\n        <Form onSubmit={handleSubmit}>\n          <Form.Group controlId=\"formBasicUserName\">\n            <Form.Label>User Name</Form.Label>\n            <Form.Control ref={userNameEl} type=\"text\" placeholder=\"Enter User Name\" />\n            <Form.Text className=\"text-muted\">\n              \"username\": \"meowmeow\"\n            </Form.Text>\n          </Form.Group>\n\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control ref={passWordEl} type=\"password\" placeholder=\"Password\" />\n            <Form.Text className=\"text-muted\">\n              \"password\": \"1234567890\",\n            </Form.Text>\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\">\n            {loading ? 'Loading...' : 'Login'}\n          </Button>\n        </Form>\n      </Col>\n    </Row>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    haveMessage: state.messagesData.show,\n    textMessage: state.messagesData.message,\n  }\n}\n\nexport default connect(mapStateToProps)(SignIn);\n\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from \"react-router-dom\";\nimport { getPosts } from '../actions';\nimport BlogItem from '../features/BlogItem';\n\nexport default function BlogDetail() {\n  const { id } = useParams();\n  const posts = useSelector(getPosts);\n  const blogData = ( !!posts[id] && posts[id] ) || {};\n\n  return (\n    <div className='mb-5'>\n      {\n        Object.keys(blogData).length > 0 ? (<BlogItem { ...blogData } blogDetail />) : ''\n      }\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Row, Col } from 'react-bootstrap';\nimport BlogList from '../features/BlogList';\n\nexport function BlogSearchResult({...props}) {\n  const { dispatch, queryPost, showLoading } = props;\n  const posts = queryPost;\n  const query = getURLParams(window.location);\n  const numberResultsFound = Object.keys(posts).length;\n\n  useEffect(() => {\n    dispatch({\n      type: 'SELECT_QUERY_POSTS',\n      keywords: query.query,\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [query.query]);\n\n  return (\n    <Row className=\"justify-content-center\">\n      <Col xs='8'>\n        <p>{`Search keyword: ${query.query}(${numberResultsFound})`}</p>\n        {\n          !showLoading ? numberResultsFound > 0 ? (\n            <BlogList\n              posts={posts}\n              styling={{\n                overflow: 'auto',\n                'overflowX': 'hidden',\n                height: 'calc(100vh - 220px)'\n              }}\n            />\n          ) : (\n            <p className='text-muted'>No Result Found</p>\n          ) : (\n            <p className='text-muted'>Loading</p>\n          )\n        }\n      </Col>\n    </Row>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    queryPost: state.postData.results || [],\n    showLoading: state.postData.query,\n  }\n}\n\nexport default connect(mapStateToProps)(BlogSearchResult);\n\nexport function getURLParams(location) {\n  const searchParams = new URLSearchParams(location.search);\n  return {\n    query: searchParams.get('query') || '',\n  };\n}\n","import React from \"react\";\nimport { Switch } from \"react-router-dom\";\nimport Route from \"./Route\";\nimport Dashboard from '../pages/DashBoard';\nimport BlogCreate from '../pages/BlogCreate';\nimport SignIn from '../pages/SignIn';\nimport BlogDetail from '../pages/BlogDetail';\nimport BlogSearchResult from '../pages/BlogSearchResult';\n\nexport default function Routes() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={Dashboard} exact isPrivate title='Dashboard' />\n      <Route path=\"/blog/create\" component={BlogCreate} exact isPrivate title='Blog Create' />\n      <Route path=\"/blog/:id\" component={BlogDetail} isPrivate title='Blog Detail' />\n      <Route path=\"/search\" component={BlogSearchResult} isPrivate title='Blog Search' />\n\n      {/* redirect user to SignIn page if route does not exist and user is not authenticated */}\n      <Route path=\"/signin\" component={SignIn} title='Sign In' />\n    </Switch>\n  );\n}\n","import React from 'react';\r\nimport { Router } from \"react-router-dom\";\r\nimport history from \"./services/history\";\r\nimport Routes from \"./routes\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router history={history}>\r\n        <Routes />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from 'redux';\n\nexport function postData(state = {\n  query: false\n}, action) {\n  switch (action.type) {\n    case 'CREATE_NEW_POST':\n      let newPost = { ...action.post };\n      newPost.id = new Date().setMilliseconds(0);\n      return {\n        ...state,\n        items: {\n          ...state.items,\n          [newPost.id]: newPost,\n        }\n      };\n      case 'RECEIVE_POSTS':\n        const assignPosts = {};\n        action.posts.map((item) => {\n          assignPosts[item.id] = item;\n          return item;\n        });\n        return {\n          ...state,\n          items: {\n            ...state.items,\n            ...assignPosts,\n          }\n        }\n      case 'QUERY_POSTS':\n        return {\n          ...state,\n          query: true\n        }\n      case 'RECEIVE_QUERY_POSTS':\n        return {\n          ...state,\n          results: action.results\n        }\n      case 'DONE_QUERY_POSTS':\n        return {\n          ...state,\n          query: false\n        }\n      default:\n      return state;\n  }\n}\n\nexport function userData(state = {}, action) {\n  switch (action.type) {\n    case 'RECEIVE_USERS':\n      const assignUsers = {};\n      action.users.map((item) => {\n        assignUsers[item.id] = item;\n        return item;\n      });\n      return {\n        ...state,\n        ...assignUsers\n      }\n    default:\n      return state;\n  }\n}\n\nexport function commentData(state = {}, action) {\n  switch (action.type) {\n    case 'RECEIVE_COMMENTS':\n      const assignComments = {};\n      action.comments.map((item) => {\n        assignComments[item.id] = item;\n        return item;\n      });\n      return {\n        ...state,\n        ...assignComments\n      }\n    default:\n      return state;\n  }\n}\n\nexport function accountData(state = {\n  loggedID: -1,\n  query: false,\n  status: 'unlogged'\n}, action) {\n  switch (action.type) {\n    case 'RECEIVE_ACCOUNT':\n      return {\n        ...state,\n        loggedID: typeof action.id === 'number' ? action.id : -1\n      };\n    case 'QUERY_ACCOUNT':\n      return {\n        ...state,\n        query: action.state\n      };\n    case 'ACTION_ACCOUNT':\n      return {\n        ...state,\n        status: action.status\n      };\n    default:\n      return state;\n  }\n}\n\nexport function messagesData(state = {\n  message: '',\n  show: false\n}, action) {\n  switch (action.type) {\n    case 'RECEIVE_MESSAGE':\n      return {\n        ...state,\n        message: action.message,\n        show: true\n      };\n    case 'HIDE_MESSAGE':\n      return {\n        ...state,\n        message: '',\n        show: false,\n      };\n    default:\n      return state;\n  }\n}\n\nconst rootReducer = combineReducers({\n  postData,\n  userData,\n  commentData,\n  accountData,\n  messagesData,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport rootReducer from '../reducers';\nimport createSagaMiddleware from 'redux-saga';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport default function configureStore() {\n  const sagaMiddleware = createSagaMiddleware();\n  let store = createStore(persistedReducer, applyMiddleware(sagaMiddleware));\n  let persistor = persistStore(store);\n  return {\n    ...store,\n    persistor,\n    runSaga: sagaMiddleware.run,\n  };\n}\n","import { put, call, fork, delay, takeLatest, select } from 'redux-saga/effects';\n// import fetch from 'isomorphic-fetch';\nimport comments from '../db/comments.json';\nimport users from '../db/users.json';\nimport posts from '../db/posts.json';\n\nexport function fetchApi(name) {\n  switch (name) {\n    case 'posts':\n      return posts;\n    case 'comments':\n      return comments;\n    default:\n      return users;\n  }\n}\n\nexport function* verifyAccount(params) {\n  const { account } = params;\n  yield put({\n    type: 'QUERY_ACCOUNT',\n    state: true\n  });\n  yield delay(1000);\n  const users = yield call(fetchApi, 'users');\n  const filterResults = users.filter(item => item.password === account.pwd && item.username === account.usn);\n  if(!!filterResults[0]) {\n    yield put({\n      type: 'RECEIVE_ACCOUNT',\n      id: filterResults[0].id\n    });\n    yield put({\n      type: 'ACTION_ACCOUNT',\n      status: 'logged'\n    });\n  } else {\n    yield put({\n      type: 'ACTION_ACCOUNT',\n      status: 'wrong_password'\n    });\n    yield put({\n      type: 'RECEIVE_MESSAGE',\n      message: 'Wrong User Name or Password!!',\n    });\n  }\n  yield put({\n    type: 'QUERY_ACCOUNT',\n    state: false\n  });\n}\n\nexport function* selectAllQueryPost() {\n  yield put({\n    type: 'QUERY_POSTS'\n  });\n  yield delay(1000);\n  const posts = yield select(state => state.postData.items);\n  yield put({\n    type: 'RECEIVE_QUERY_POSTS',\n    results: posts\n  });\n  yield put({\n    type: 'DONE_QUERY_POSTS'\n  });\n}\n\nexport function* queryNewPost(params) {\n  const { post } = params;\n  yield put({\n    type: 'QUERY_POSTS'\n  });\n  yield delay(500);\n  yield put({\n    type: 'CREATE_NEW_POST',\n    post\n  });\n  yield put({\n    type: 'RECEIVE_MESSAGE',\n    message: 'Create new post success!',\n  });\n  yield put({\n    type: 'DONE_QUERY_POSTS'\n  });\n}\n\nexport function* selectQueryPost(params) {\n  const { keywords } = params;\n  yield put({\n    type: 'QUERY_POSTS'\n  });\n  yield delay(1000);\n  const posts = yield select(state => state.postData.items);\n\n  const testReg = new RegExp(`(${keywords.trim().replace(/\\s/g, '|')})`, 'ig');\n  let results = {};\n  Object.keys(posts).map(key => {\n    const item = posts[key];\n    if(\n      item.title.match(testReg) ||\n      item.content.match(testReg) ||\n      item.tags.join(' ').match(testReg)\n    ) {\n      results[item.id] = {...item};\n    }\n    return item;\n  });\n  yield put({\n    type: 'RECEIVE_QUERY_POSTS',\n    results: results\n  });\n  yield put({\n    type: 'DONE_QUERY_POSTS'\n  });\n}\n\nexport function* startup() {\n  yield delay(500);\n  const posts = yield call(fetchApi, 'posts');\n  const users = yield call(fetchApi, 'users');\n  const comments = yield call(fetchApi, 'comments');\n  yield put({\n    type: 'RECEIVE_POSTS',\n    posts\n  });\n  yield put({\n    type: 'RECEIVE_USERS',\n    users\n  });\n  yield put({\n    type: 'RECEIVE_COMMENTS',\n    comments\n  });\n  yield put({\n    type: 'QUERY_ACCOUNT',\n    state: false\n  });\n  yield put({\n    type: 'ACTION_ACCOUNT',\n    status: 'unlogged'\n  });\n  yield put({\n    type: 'HIDE_MESSAGE',\n  });\n}\n\nexport default function* root() {\n  yield fork(startup);\n  yield takeLatest('VERIFY_ACCOUNT', verifyAccount);\n  yield takeLatest('SELECT_ALL_QUERY_POSTS', selectAllQueryPost);\n  yield takeLatest('SELECT_QUERY_POSTS', selectQueryPost);\n  yield takeLatest('QUERY_NEW_POST', queryNewPost);\n}\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\n// import store from './app/store';\r\nimport configureStore from './store/configureStore';\r\nimport rootSaga from './sagas';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst store = configureStore();\r\nstore.runSaga(rootSaga);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}